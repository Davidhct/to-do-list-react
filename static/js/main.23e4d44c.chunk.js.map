{"version":3,"sources":["components/TodoInput/TodoInput.component.jsx","components/Item/Item.component.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["TodoInput","onChangeInput","onClickInput","className","type","placeholder","onChange","onClick","Item","props","id","checked","todo","check","onCheckHandle","value","App","event","setState","userInput","target","todosArr","state","todos","push","updateState","map","item","index","Number","items","this","console","log","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAGaA,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,cAAeC,EAAlB,EAAkBA,aAAlB,OACvB,sBAAKC,UAAU,YAAf,UACE,uBACEC,KAAK,OACLC,YAAY,cACZC,SAAUL,EACVE,UAAU,UAEZ,wBAAQC,KAAK,SAASG,QAASL,EAAcC,UAAU,eAAvD,mBCRSK,G,MAAO,SAACC,GACnB,OACE,sBAAKN,UAAU,WAAf,UACE,uBACEC,KAAK,WACLD,UAAU,WACVO,GAAID,EAAMC,GACVC,QAASF,EAAMG,KAAKC,MACpBP,SAAUG,EAAMK,gBAElB,mBAAGX,UAAU,OAAb,SAAqBM,EAAMG,KAAKG,aC8CvBC,G,wDArDb,aAAe,IAAD,8BACZ,gBAOFf,cAAgB,SAACgB,GACf,EAAKC,SAAS,CAAEC,UAAWF,EAAMG,OAAOL,SAT5B,EAWdb,aAAe,WACb,IAAImB,EAAW,EAAKC,MAAMC,MAC1BF,EAASG,KAAK,CAAEX,OAAO,EAAOE,MAAO,EAAKO,MAAMH,YAChD,EAAKD,SAAS,CAAEK,MAAOF,KAdX,EAiBdP,cAAgB,SAACG,GACf,IACMQ,EADY,EAAKH,MAAMC,MACCG,KAAI,SAACC,EAAMC,GACvC,OAAIA,IAAUC,OAAOZ,EAAMG,OAAOV,IACzB,2BACFiB,GADL,IAEEd,OAAQc,EAAKd,QAGVc,KAET,EAAKT,SAAS,CAAEK,MAAOE,KA1BvB,EAAKH,MAAQ,CACXH,UAAW,GACXI,MAAO,IAJG,E,0CA+Bd,WAAU,IAAD,OACDO,EAAQC,KAAKT,MAAMC,MAAMG,KAAI,SAACC,EAAMC,GAAP,OACjC,cAAC,EAAD,CAEElB,GAAIkB,EACJhB,KAAMe,EACNb,cAAe,EAAKA,eAHfc,MAOT,OADAI,QAAQC,IAAIF,KAAKT,MAAMC,OAErB,sBAAKpB,UAAU,MAAf,UACE,cAAC,EAAD,CACEF,cAAe8B,KAAK9B,cACpBC,aAAc6B,KAAK7B,eAEpB4B,S,GAhDSI,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.23e4d44c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./TodoInput.styles.css\";\r\n\r\nexport const TodoInput = ({ onChangeInput, onClickInput }) => (\r\n  <div className=\"input-div\">\r\n    <input\r\n      type=\"text\"\r\n      placeholder=\"Ender todos\"\r\n      onChange={onChangeInput}\r\n      className=\"input\"\r\n    />\r\n    <button type=\"button\" onClick={onClickInput} className=\"input-button\">\r\n      +\r\n    </button>\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport \"./Item.styles.css\";\r\n\r\nexport const Item = (props) => {\r\n  return (\r\n    <div className=\"item-div\">\r\n      <input\r\n        type=\"checkbox\"\r\n        className=\"checkbox\"\r\n        id={props.id}\r\n        checked={props.todo.check}\r\n        onChange={props.onCheckHandle}\r\n      />\r\n      <p className=\"item\">{props.todo.value}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\nimport { TodoInput } from \"./components/TodoInput/TodoInput.component\";\nimport { Item } from \"./components/Item/Item.component\";\nimport \"./App.css\";\n/////////////////////////\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      userInput: \"\",\n      todos: [],\n    };\n  }\n\n  onChangeInput = (event) => {\n    this.setState({ userInput: event.target.value });\n  };\n  onClickInput = () => {\n    let todosArr = this.state.todos;\n    todosArr.push({ check: false, value: this.state.userInput });\n    this.setState({ todos: todosArr });\n  };\n\n  onCheckHandle = (event) => {\n    const prevState = this.state.todos;\n    const updateState = prevState.map((item, index) => {\n      if (index === Number(event.target.id)) {\n        return {\n          ...item,\n          check: !item.check,\n        };\n      }\n      return item;\n    });\n    this.setState({ todos: updateState });\n  };\n\n  render() {\n    const items = this.state.todos.map((item, index) => (\n      <Item\n        key={index}\n        id={index}\n        todo={item}\n        onCheckHandle={this.onCheckHandle}\n      />\n    ));\n    console.log(this.state.todos);\n    return (\n      <div className=\"App\">\n        <TodoInput\n          onChangeInput={this.onChangeInput}\n          onClickInput={this.onClickInput}\n        />\n        {items}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}